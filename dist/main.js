(()=>{"use strict";const r=function(r){for(var e,n=[],s=1;s<arguments.length;s++)n[s-1]=arguments[s];this.squares=[];var u=n.map((function(e){return{color:r,x:e.x,y:e.y}}));(e=this.squares).push.apply(e,u)};var e=document.querySelector("#canvas"),n=e.getContext("2d"),s=50,u=800,a=500,t=-s,o=s,c=!1,y=300,i=new r(""),f=new r("");e.height=u+4,e.width=a+4;var l=0,x=!1;function q(){switch(Math.floor(7*Math.random())){case 0:f=new r("cyan",{x:o,y:t},{x:o+50,y:t},{x:o+100,y:t},{x:o+150,y:t});break;case 1:f=new r("blue",{x:o,y:t},{x:o+50,y:t},{x:o+100,y:t},{x:o+100,y:t+50});break;case 2:f=new r("orange",{x:o,y:t},{x:o+50,y:t},{x:o+100,y:t},{x:o+100,y:t-50});break;case 3:f=new r("yellow",{x:o,y:t},{x:o+50,y:t},{x:o,y:t+50},{x:o+50,y:t+50});break;case 4:f=new r("red",{x:o,y:t},{x:o+50,y:t},{x:o+50,y:t+50},{x:o+100,y:t+50}),"red",f.squares.forEach((function(r){r.color="red"}));break;case 5:f=new r("green",{x:o,y:t},{x:o+50,y:t},{x:o+50,y:t-50},{x:o+100,y:t-50});break;default:f=new r("violet",{x:o,y:t},{x:o+50,y:t},{x:o+50,y:t-50},{x:o+100,y:t})}}function h(r,e){return r<0||r+s>a||e+s>u||i.squares.find((function(n){return n.x==r&&n.y==e}))}function d(){var r,e,n,t;f.squares.find((function(r){return r.y>=u-s}))||f.squares.find((function(r){return h(r.x,r.y+s)}))?((r=i.squares).push.apply(r,f.squares),e=[],n=[],i.squares.forEach((function(r){var u=e.find((function(e){return e.y==r.y}));u?++u.count>=a/s&&n.push(u.y):e.push({y:r.y,count:1})})),(t=n).sort(),t.forEach((function(r){var e;e=r,i.squares=i.squares.filter((function(r){return r.y!==e}))})),t.forEach((function(r){var e;e=r,i.squares.forEach((function(r){r.y<e&&(r.y+=s)}))})),t.length&&function(r){l+=r;var e=document.querySelector("#rowScore");e&&(e.innerHTML=l.toString()),console.log("test"),y=300*Math.pow(.9,l);var n=document.querySelector("#speed");n&&(n.innerHTML=(Math.round(1/y*1e5)/100).toString())}(t.length),q()):f.squares.forEach((function(r){r.y+=s}))}q(),function r(){setTimeout((function(){if(x=!0,d(),i.squares.find((function(r){return r.y<0}))){var e=document.querySelector("#lostLabel");e&&(e.style.display="block"),c=!0}else r()}),y)}(),function r(){requestAnimationFrame((function(){x&&(function(){if(n){n.clearRect(0,0,e.width,e.height);for(var r=0;r<i.squares.length;r++)n.beginPath(),n.lineWidth=4,n.strokeStyle="black",n.fillStyle=i.squares[r].color,n.rect(i.squares[r].x+2,i.squares[r].y+2,s,s),n.fill(),n.stroke();for(r=0;r<f.squares.length;r++)n.beginPath(),n.lineWidth=4,n.strokeStyle="black",n.fillStyle=f.squares[r].color,n.rect(f.squares[r].x+2,f.squares[r].y+2,s,s),n.fill(),n.stroke()}}(),x=!1),c||r()}))}(),document.onkeydown=function(e){38==e.keyCode?(function(){if("yellow"!=f.squares[0].color&&!c){JSON.parse(JSON.stringify(f));var e=new r(f.squares[0].color);e.squares=f.squares.map((function(r){return{x:r.x-f.squares[1].x,y:r.y-f.squares[1].y,color:r.color}}));var n=new r(f.squares[0].color);n.squares=function(r){return r.squares.map((function(r){var e=r.x;return{x:r.x=-r.y+f.squares[1].x,y:r.y=e+f.squares[1].y,color:r.color}}))}(e);var u=new r(f.squares[0].color);u.squares=n.squares.filter((function(r){return h(r.x,r.y)})),u&&(n=function(r,e,n){var u=Math.min.apply(Math,r.squares.map((function(r){return r.x}))),a=Math.max.apply(Math,r.squares.map((function(r){return r.x}))),t=Math.max.apply(Math,r.squares.map((function(r){return r.y}))),o=n;if(u<e.squares[1].x&&a>e.squares[1].x);else if(u<n.squares[1].x){var c=n.squares[1].x-u;o.squares=n.squares.map((function(r){return{x:r.x+=c,y:r.y,color:r.color}}))}else if(a>n.squares[1].x){var y=n.squares[1].x-a;o.squares=n.squares.map((function(r){return{x:r.x+=y,y:r.y,color:r.color}}))}else if(t>=n.squares[1].y){var i=t-n.squares[1].y+s;o.squares=n.squares.map((function(r){return{x:r.x,y:r.y-=i,color:r.color}}))}return o}(u,e,n)),n.squares.find((function(r){return h(r.x,r.y)}))||(f=n)}}(),x=!0):40==e.keyCode?(d(),x=!0):37==e.keyCode?(f.squares.find((function(r){return h(r.x-s,r.y)}))||f.squares.forEach((function(r){r.x-=s})),x=!0):39==e.keyCode&&(f.squares.find((function(r){return h(r.x+s,r.y)}))||f.squares.forEach((function(r){r.x+=s})),x=!0)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,